# AI Tweet Bot - .gitignore

# Environment variables and secrets
.env
.env.local
.env.production
.env.staging
*.env

# API Keys and sensitive data
api_keys.txt
secrets.json
config.ini

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
env/
ENV/
env.bak/
venv.bak/
.venv/
.virtualenv/

# IDE and editors
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Jupyter Notebook
.ipynb_checkpoints

# PyCharm
.idea/

# Spyder
.spyderproject
.spyproject

# Rope
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# Logs
*.log
logs/
log/
*.log.*

# Database files
*.db
*.sqlite
*.sqlite3

# Backup files
*.bak
*.backup
*.old
*~

# Temporary files
tmp/
temp/
*.tmp
*.temp

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Twitter/Social Media data (sensitive)
twitter_data/
social_media_cache/
user_data/

# AI/ML model files (if any)
*.pkl
*.pickle
*.model
*.h5
*.pt
*.pth

# Data files (potentially sensitive)
data/
datasets/
raw_data/
processed_data/

# Cache directories
.cache/
cache/
__pycache__/

# Test coverage
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Flask specific
instance/
.webassets-cache

# Scrapy stuff
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmyp.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# AI Tweet Bot specific files
# Sensitive data files
posted_articles_backup.json
accounts_backup.json
private_config.json

# Large data files
*.csv
*.xlsx
*.json.bak

# Development and testing
test_output/
debug_logs/
development_data/

# Deployment files
deploy/
deployment/
.deploy/

# Docker
Dockerfile.local
docker-compose.override.yml
.dockerignore

# Node.js (if using any frontend tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Package files
*.tar.gz
*.zip
*.rar
*.7z

# Editor backups
*~
*.swp
*.swo

# Local configuration overrides
local_settings.py
local_config.json

# PythonAnywhere specific
.pythonanywhere/

# Streamlit specific
.streamlit/secrets.toml

# Jupyter
.jupyter/

# IPython
profile_default/
ipython_config.py

# Pytest
.pytest_cache/

# Coverage reports
htmlcov/
.coverage
coverage.xml

# Translations
*.mo
*.pot

# Django stuff (if applicable)
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff
instance/
.webassets-cache

# Scrapy stuff
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py
